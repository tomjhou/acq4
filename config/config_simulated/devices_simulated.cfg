# This configuration file defines a set of simulated devices that allow some 
# of ACQ4's acquisition capabilities to be tested on any machine. 
# 
# Also included are example configuration for every type of device supported
# by ACQ4, commented out. These may be used to construct a working 
# device configuration file.

# First, define the NI DAQ device we will use. For use with a real DAQ, simply
# remove the line 'mock: True'. The name 'DAQ', defined here, will appear
# many times throughout the config to refer to this device.
DAQ:
    driver: 'NiDAQ'
    mock: True  # this is a fake device; remove this line for real NI DAQ devices.

    # Default mode for AI channels. Options are 'NRSE', 'RSE', and 'DIFF'
    # This may be overridden for individual channels.
    defaultAIMode: 'NRSE'

    # Default input/output voltage ranges
    defaultAIRange: [-10, 10]
    defaultAORange: [-10, 10]


# A simple device connected to the DAQ that uses one AI channel and one AO 
# channel. As with all of the following device definitions, the name 
# 'DaqDevice' is arbitrary.
DaqDevice:
    driver: 'DAQGeneric'
    channels:
        AIChan:
            device: 'DAQ'
            channel: '/Dev1/ai0'
            type: 'ai'
        AOChan:
            device: 'DAQ'
            channel: '/Dev1/ao0'
            type: 'ao'
    
# A simulated patch-clamp amplifier. It is connected to a Hodgkin-Huxley
# neuron model, allowing some of ACQ4's acquisition modules to be tested on
# a "real" system.
Clamp1:
    driver: 'MockClamp'
    simulator: 'builtin'  # Also supports 'neuron' if you have neuron+python
                            # installed. See lib/devices/MockClamp/neuronSim.py.
                            
    # Define two connections to the DAQ:
    Command:
        device: 'DAQ'
        channel: '/Dev1/ao0'
        type: 'ao'
    ScaledSignal:
        device: 'DAQ'
        channel: '/Dev1/ai5'
        mode: 'NRSE'
        type: 'ai'
        
    # Default holding values.
    icHolding: 0.0
    vcHolding: -65e-3

